<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Glarduino.Core</name>
    </assembly>
    <members>
        <member name="T:Glarduino.ICommunicationPort">
            <summary>
            Contract for types that provide access to a stream-based communication port.
            </summary>
        </member>
        <member name="P:Glarduino.ICommunicationPort.IsOpen">
            <summary>
            Indicates if the port is open.
            </summary>
        </member>
        <member name="P:Glarduino.ICommunicationPort.ReadTimeout">
            <summary>
            Mutable read timeout in milliseconds.
            </summary>
        </member>
        <member name="P:Glarduino.ICommunicationPort.WriteTimeout">
            <summary>
            Mutable write timeout in milliseconds.
            </summary>
        </member>
        <member name="P:Glarduino.ICommunicationPort.Encoding">
            <summary>
            The default string encoding.
            </summary>
        </member>
        <member name="P:Glarduino.ICommunicationPort.BaseStream">
            <summary>
            The communication stream.
            </summary>
        </member>
        <member name="M:Glarduino.ICommunicationPort.Open(System.Threading.CancellationToken)">
            <summary>
            Synchronously opens the communication port.
            </summary>
            <param name="cancelToken"></param>
        </member>
        <member name="M:Glarduino.ICommunicationPort.Close">
            <summary>
            Synchronously closes the communication port.
            </summary>
        </member>
        <member name="T:Glarduino.SerialPortCommunicationPortAdapter">
            <summary>
            The <see cref="T:System.IO.Ports.SerialPort"/> based implementation of the <see cref="T:Glarduino.ICommunicationPort"/>
            interface.
            </summary>
        </member>
        <member name="P:Glarduino.SerialPortCommunicationPortAdapter.InternalSerialPort">
            <summary>
            The <see cref="T:System.IO.Ports.SerialPort"/> used to implement the <see cref="T:Glarduino.ICommunicationPort"/> interface.
            </summary>
        </member>
        <member name="P:Glarduino.SerialPortCommunicationPortAdapter.IsOpen">
            <inheritdoc />
        </member>
        <member name="P:Glarduino.SerialPortCommunicationPortAdapter.ReadTimeout">
            <inheritdoc />
        </member>
        <member name="P:Glarduino.SerialPortCommunicationPortAdapter.WriteTimeout">
            <inheritdoc />
        </member>
        <member name="P:Glarduino.SerialPortCommunicationPortAdapter.Encoding">
            <inheritdoc />
        </member>
        <member name="P:Glarduino.SerialPortCommunicationPortAdapter.BaseStream">
            <inheritdoc />
        </member>
        <member name="M:Glarduino.SerialPortCommunicationPortAdapter.#ctor(System.IO.Ports.SerialPort)">
            <summary>
            Creates a new <see cref="T:Glarduino.SerialPortCommunicationPortAdapter"/> with the provided <see cref="T:System.IO.Ports.SerialPort"/> <paramref name="internalSerialPort"/>
            as the port to be used.
            </summary>
            <param name="internalSerialPort">Specified port.</param>
        </member>
        <member name="M:Glarduino.SerialPortCommunicationPortAdapter.Dispose">
            <summary>
            Disposes the adapter which disposes of <see cref="P:Glarduino.SerialPortCommunicationPortAdapter.InternalSerialPort"/>.
            </summary>
        </member>
        <member name="M:Glarduino.SerialPortCommunicationPortAdapter.Open(System.Threading.CancellationToken)">
            <param name="cancelToken"></param>
            <inheritdoc />
        </member>
        <member name="M:Glarduino.SerialPortCommunicationPortAdapter.Close">
            <inheritdoc />
        </member>
        <member name="T:Glarduino.BaseGlarduinoClient`1">
            <summary>
            Base type for any Glarduino Arduino connected client.
            </summary>
        </member>
        <member name="P:Glarduino.BaseGlarduinoClient`1.InternallyManagedPort">
            <summary>
            The internally managed <see cref="T:System.IO.Ports.SerialPort"/> that represents
            the potentially connected port to the Aurdino device.
            </summary>
        </member>
        <member name="P:Glarduino.BaseGlarduinoClient`1.ConnectionInfo">
            <summary>
            The connection info used for the <see cref="P:Glarduino.BaseGlarduinoClient`1.InternallyManagedPort"/>.
            </summary>
        </member>
        <member name="P:Glarduino.BaseGlarduinoClient`1.isConnected">
            <summary>
            Indicates if the client is connected.
            </summary>
        </member>
        <member name="P:Glarduino.BaseGlarduinoClient`1.ConnectionEvents">
            <summary>
            Container for subscribable connection events for the client.
            </summary>
        </member>
        <member name="P:Glarduino.BaseGlarduinoClient`1.MessageDeserializer">
            <summary>
            Strategy for deserializing messages from the serial port.
            </summary>
        </member>
        <member name="P:Glarduino.BaseGlarduinoClient`1.MessageDispatcher">
            <summary>
            Strategy for dispatching messages.
            </summary>
        </member>
        <member name="E:Glarduino.BaseGlarduinoClient`1.OnExceptionEncountered">
            <summary>
            Publisher for exceptions encountered
            </summary>
        </member>
        <member name="M:Glarduino.BaseGlarduinoClient`1.#ctor(Glarduino.ArduinoPortConnectionInfo,Glarduino.IMessageDeserializerStrategy{`0},Glarduino.IMessageDispatchingStrategy{`0})">
            <summary>
            Crates a new <see cref="T:Glarduino.BaseGlarduinoClient`1"/>.
            </summary>
            <param name="connectionInfo">The connection information for the port.</param>
            <param name="messageDeserializer">The message deserialization strategy.</param>
            <param name="messageDispatcher">The message dispatching strategy.</param>
        </member>
        <member name="M:Glarduino.BaseGlarduinoClient`1.#ctor(Glarduino.ArduinoPortConnectionInfo,Glarduino.IMessageDeserializerStrategy{`0},Glarduino.IMessageDispatchingStrategy{`0},Glarduino.ICommunicationPort)">
            <summary>
            Crates a new <see cref="T:Glarduino.BaseGlarduinoClient`1"/>.
            Specifically defining the communication port.
            </summary>
            <param name="connectionInfo">The connection information for the port.</param>
            <param name="messageDeserializer">The message deserialization strategy.</param>
            <param name="messageDispatcher">The message dispatching strategy.</param>
            <param name="comPort">The specified communication port.</param>
        </member>
        <member name="M:Glarduino.BaseGlarduinoClient`1.ConnectAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Glarduino.BaseGlarduinoClient`1.StartListeningAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Glarduino.BaseGlarduinoClient`1.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Glarduino.BaseIntGlarduinoClient">
            <summary>
            base <see cref="T:System.Int32"/> implementation of <see cref="T:Glarduino.BaseGlarduinoClient`1"/>.
            </summary>
        </member>
        <member name="M:Glarduino.BaseIntGlarduinoClient.#ctor(Glarduino.ArduinoPortConnectionInfo,Glarduino.IMessageDeserializerStrategy{System.Int32},Glarduino.IMessageDispatchingStrategy{System.Int32})">
            <summary>
            Crates a new <see cref="T:Glarduino.BaseIntGlarduinoClient"/>.
            </summary>
            <param name="connectionInfo">The connection information for the port.</param>
            <param name="messageDeserializer">The message deserialization strategy.</param>
            <param name="messageDispatcher">The message dispatching strategy.</param>
        </member>
        <member name="M:Glarduino.BaseIntGlarduinoClient.#ctor(Glarduino.ArduinoPortConnectionInfo,Glarduino.IMessageDeserializerStrategy{System.Int32},Glarduino.IMessageDispatchingStrategy{System.Int32},Glarduino.ICommunicationPort)">
            <summary>
            Crates a new <see cref="T:Glarduino.BaseIntGlarduinoClient"/>.
            Specifically defining the communication port.
            </summary>
            <param name="connectionInfo">The connection information for the port.</param>
            <param name="messageDeserializer">The message deserialization strategy.</param>
            <param name="messageDispatcher">The message dispatching strategy.</param>
            <param name="comPort">The specified communication port.</param>
        </member>
        <member name="T:Glarduino.BaseStringGlarduinoClient">
            <summary>
            base <see cref="T:System.String"/> implementation of <see cref="T:Glarduino.BaseGlarduinoClient`1"/>.
            </summary>
        </member>
        <member name="M:Glarduino.BaseStringGlarduinoClient.#ctor(Glarduino.ArduinoPortConnectionInfo,Glarduino.IMessageDeserializerStrategy{System.String},Glarduino.IMessageDispatchingStrategy{System.String})">
            <summary>
            Crates a new <see cref="T:Glarduino.BaseStringGlarduinoClient"/>.
            </summary>
            <param name="connectionInfo">The connection information for the port.</param>
            <param name="messageDeserializer">The message deserialization strategy.</param>
            <param name="messageDispatcher">The message dispatching strategy.</param>
        </member>
        <member name="M:Glarduino.BaseStringGlarduinoClient.#ctor(Glarduino.ArduinoPortConnectionInfo,Glarduino.IMessageDeserializerStrategy{System.String},Glarduino.IMessageDispatchingStrategy{System.String},Glarduino.ICommunicationPort)">
            <summary>
            Crates a new <see cref="T:Glarduino.BaseStringGlarduinoClient"/>.
            </summary>
            <param name="connectionInfo">The connection information for the port.</param>
            <param name="messageDeserializer">The message deserialization strategy.</param>
            <param name="messageDispatcher">The message dispatching strategy.</param>
            <param name="comPort">The specified communication port.</param>
        </member>
        <member name="F:Glarduino.GlarduinoClientConstants.GLARDUINO_CONNECTION_START_MAGIC_NUMBER">
            <summary>
            The magical number constant.
            Based on: 0xD9B4BEF9
            See: https://bitcoin.stackexchange.com/questions/43189/what-is-the-magic-number-used-in-the-block-structure
            </summary>
        </member>
        <member name="F:Glarduino.GlarduinoClientConstants.MagicalByteNumber">
            <summary>
            Represents the 4-byte representation of <see cref="F:Glarduino.GlarduinoClientConstants.GLARDUINO_CONNECTION_START_MAGIC_NUMBER"/>.
            </summary>
        </member>
        <member name="T:Glarduino.IClientConnectable">
            <summary>
            Contract for types that are client connectable.
            </summary>
        </member>
        <member name="M:Glarduino.IClientConnectable.ConnectAsync(System.Threading.CancellationToken)">
            <summary>
            Opens the underlying Arduino port.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Glarduino.IClientListenable">
            <summary>
            Contract for types that are client listenable
            </summary>
        </member>
        <member name="M:Glarduino.IClientListenable.StartListeningAsync(System.Threading.CancellationToken)">
            <summary>
            Starts the client listening.
            </summary>
            <returns>Awaitable that completes when the client finishes listening.</returns>
        </member>
        <member name="T:Glarduino.ArduinoPortConnectionInfo">
            <summary>
            Port connection information for the Arduino connection.
            </summary>
        </member>
        <member name="P:Glarduino.ArduinoPortConnectionInfo.PortName">
            <summary>
            Port name with which the SerialPort object will be created.
            </summary>
        </member>
        <member name="P:Glarduino.ArduinoPortConnectionInfo.BaudRate">
            <summary>
            Baud rate that the serial device is using to transmit data.
            This is bits per second.
            </summary>
        </member>
        <member name="P:Glarduino.ArduinoPortConnectionInfo.ReadTimeout">
            <summary>
            Amount of milliseconds alotted to a single read or connect. An
            exception is thrown when such operations take more than this time
            to complete.
            </summary>
        </member>
        <member name="P:Glarduino.ArduinoPortConnectionInfo.WriteTimeout">
            <summary>
            Amount of milliseconds alloted to a single write. An exception is thrown
            when such operations take more than this time to complete.
            </summary>
        </member>
        <member name="T:Glarduino.GlardunioStaticConfig">
            <summary>
            Static/global configuration for Glardunio.
            </summary>
        </member>
        <member name="P:Glarduino.GlardunioStaticConfig.DebugLogging">
            <summary>
            Mutable static configuration property that determines if
            Glardunio will spit out debug logging info.
            </summary>
        </member>
        <member name="T:Glarduino.ConnectionEvents">
            <summary>
            Default implementation of <see cref="T:Glarduino.IConnectionEventsSubscribable"/>.
            </summary>
        </member>
        <member name="E:Glarduino.ConnectionEvents.OnClientConnected">
            <inheritdoc />
        </member>
        <member name="E:Glarduino.ConnectionEvents.OnClientDisconnected">
            <inheritdoc />
        </member>
        <member name="M:Glarduino.ConnectionEvents.InvokeClientConnected">
            <summary>
            Invokes the <see cref="E:Glarduino.ConnectionEvents.OnClientConnected"/> event.
            </summary>
        </member>
        <member name="M:Glarduino.ConnectionEvents.InvokeClientDisconnected">
            <summary>
            Invokes the <see cref="E:Glarduino.ConnectionEvents.OnClientDisconnected"/> event.
            </summary>
        </member>
        <member name="T:Glarduino.IConnectionEventsSubscribable">
            <summary>
            Contract for types that can publish connection events.
            </summary>
        </member>
        <member name="E:Glarduino.IConnectionEventsSubscribable.OnClientConnected">
            <summary>
            Event for client connection.
            </summary>
        </member>
        <member name="E:Glarduino.IConnectionEventsSubscribable.OnClientDisconnected">
            <summary>
            Event for client disconnection.
            </summary>
        </member>
        <member name="F:Glarduino.SerialPortExtensions.DefaultNewLine">
            <summary>
            From https://github.com/dotnet/runtime/blob/4f9ae42d861fcb4be2fcd5d3d55d5f227d30e723/src/libraries/System.IO.Ports/src/System/IO/Ports/SerialPort.cs#L36
            </summary>
        </member>
        <member name="M:Glarduino.SerialPortExtensions.ReadAsync(Glarduino.ICommunicationPort,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Reads a chunk into the provided <paramref name="buffer"/> from the provided <see cref="T:System.IO.Ports.SerialPort"/>.
            </summary>
            <param name="serialPort">The port to read from.</param>
            <param name="buffer">The buffer to read into.</param>
            <param name="offset">The offset into the buffer.</param>
            <param name="count">The count of bytes to read.</param>
            <param name="cancellationToken">Optional cancellation token for the read operation.</param>
            <returns>Awaitable for when the operation is completed.</returns>
        </member>
        <member name="M:Glarduino.SerialPortExtensions.ReadLineAsync(Glarduino.ICommunicationPort)">
            <summary>
            Read a line from the SerialPort asynchronously
            </summary>
            <param name="serialPort">The port to read data from</param>
            <returns>A line read from the input</returns>
        </member>
        <member name="T:Glarduino.IMessageDeserializerStrategy`1">
            <summary>
            Contract for types that handle reading from a serial port and deserializing a higher level
            message of a specific type to the stream.
            </summary>
            <typeparam name="TMessageType"></typeparam>
        </member>
        <member name="M:Glarduino.IMessageDeserializerStrategy`1.ReadMessageAsync(Glarduino.ICommunicationPort,System.Threading.CancellationToken)">
            <summary>
            Reads and deserializers the message of type <typeparamref name="TMessageType"/> from the provided port <paramref name="serialPort"/>.
            </summary>
            <param name="serialPort">The serial port to read from.</param>
            <param name="cancellationToken">Optional cancel token.</param>
            <returns>The deserialized message.</returns>
        </member>
        <member name="T:Glarduino.IMessageDispatchingStrategy`1">
            <summary>
            Contract for types that implement message dispatching.
            </summary>
            <typeparam name="TMessageType">The message type.</typeparam>
        </member>
        <member name="M:Glarduino.IMessageDispatchingStrategy`1.DispatchMessageAsync(`0)">
            <summary>
            Dispatches the provided <see cref="!:message"/> with the implemented
            strategy.
            </summary>
            <param name="message">The message object.</param>
            <returns>Awaitable for when the dispatching process has completed.</returns>
        </member>
        <member name="T:Glarduino.IMessageListener`1">
            <summary>
            Conctract for types that can consume or listen for
            messages produced by the Glardiuno client.
            </summary>
            <typeparam name="TMessageType">The type of the message.</typeparam>
        </member>
        <member name="M:Glarduino.IMessageListener`1.OnMessage(`0)">
            <summary>
            Called when a message is recieved or processed.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Glarduino.IntMessageDeserializerStrategy">
            <summary>
            <see cref="T:System.Int32"/>-based implementation of <see cref="T:Glarduino.IMessageDeserializerStrategy`1"/>
            that reads a 4 byte chunk and interprets it as an <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="F:Glarduino.IntMessageDeserializerStrategy.IntBuffer">
            <summary>
            Rusable 4 byte byte buffer for temp storage of incoming int chunks.
            </summary>
        </member>
        <member name="M:Glarduino.IntMessageDeserializerStrategy.ReadMessageAsync(Glarduino.ICommunicationPort,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Glarduino.StringMessageDeserializerStrategy">
            <summary>
            <see cref="T:System.String"/>-based implementation of <see cref="T:Glarduino.IMessageDeserializerStrategy`1"/>
            that reads a <see cref="T:System.String"/> based on <see cref="T:Glarduino.ICommunicationPort"/> semantics.
            </summary>
        </member>
        <member name="M:Glarduino.StringMessageDeserializerStrategy.ReadMessageAsync(Glarduino.ICommunicationPort,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
    </members>
</doc>
